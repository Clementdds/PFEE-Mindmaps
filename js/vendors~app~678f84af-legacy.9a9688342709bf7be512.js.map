{"version":3,"sources":["webpack:///./node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/readable-stream/writable-browser.js","webpack:///./node_modules/readable-stream/duplex-browser.js","webpack:///./node_modules/readable-stream/transform.js","webpack:///./node_modules/readable-stream/passthrough.js","webpack:///./node_modules/react/index.js","webpack:///./node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/readable-stream/node_modules/safe-buffer/index.js","webpack:///./node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/readable-stream/lib/_stream_transform.js"],"names":["pna","objectKeys","Object","keys","obj","key","push","module","exports","Duplex","util","create","inherits","Readable","Writable","prototype","v","length","method","options","this","call","readable","writable","allowHalfOpen","once","onend","_writableState","ended","nextTick","onEndNT","self","end","defineProperty","enumerable","get","highWaterMark","undefined","_readableState","destroyed","set","value","_destroy","err","cb","runtime","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","Buffer","BufferList","instance","Constructor","_classCallCheck","head","tail","data","unshift","shift","ret","clear","join","s","p","concat","n","alloc","src","target","offset","allocUnsafe","copy","inspect","custom","buffer","copyProps","dst","SafeBuffer","encodingOrOffset","from","allocUnsafeSlow","size","fill","encoding","buf","SlowBuffer","PassThrough","Transform","_transform","chunk","Stream","CorkedRequest","_this","corkReq","callback","pendingcb","corkedRequestsFree","onCorkedFinish","asyncWrite","process","browser","indexOf","version","setImmediate","WritableState","internalUtil","deprecate","OurUint8Array","global","Uint8Array","realHasInstance","destroyImpl","nop","stream","isDuplex","objectMode","writableObjectMode","hwm","writableHwm","writableHighWaterMark","defaultHwm","Math","floor","finalCalled","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","er","writecb","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","emit","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","write","_write","writev","_writev","destroy","final","_final","doWrite","len","onwriteDrain","l","Array","holder","count","allBuffers","isBuf","callFinal","need","prefinish","getBuffer","current","out","_","hasInstance","pipe","isBuffer","_uint8ArrayToBuffer","writeAfterEnd","valid","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","toLowerCase","endWritable","_undestroy","undestroy","isArray","ReadableState","EventEmitter","EElistenerCount","emitter","listeners","debugUtil","debug","debuglog","StringDecoder","kProxyEvents","readableObjectMode","readableHwm","readableHighWaterMark","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","awaitDrain","readingMore","decoder","read","_read","readableAddChunk","addToFront","skipChunkCheck","emitReadable","onEofChunk","chunkInvalid","addChunk","maybeReadMore","needMoreData","isPaused","setEncoding","enc","howMuchToRead","computeNewHighWaterMark","emitReadable_","flow","maybeReadMore_","nReadingNextTick","resume_","fromList","list","hasStrings","c","str","nb","copyFromBufferString","copyFromBuffer","fromListPartial","endReadable","endReadableNT","xs","x","parseInt","nOrig","doRead","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","removeListener","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","on","pipeOnDrain","increasedAwaitDrain","pause","event","prependListener","_events","resume","dests","index","splice","ev","res","addListener","paused","apply","arguments","bind","_fromList","emitErrorNT","readableDestroyed","writableDestroyed","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","flush","_flush","_this2","err2"],"mappings":"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","file":"js\\vendors~app~678f84af-legacy.9a9688342709bf7be512.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","module.exports = require('events').EventEmitter;\n","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}"],"sourceRoot":""}